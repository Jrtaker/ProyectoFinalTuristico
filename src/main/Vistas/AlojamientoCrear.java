/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.Vistas;

import java.awt.Graphics;
import java.awt.Image;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import main.AccesoDatos.AlojamientoData;
import main.AccesoDatos.CiudadData;
import main.entidades.Alojamiento;
import main.entidades.Ciudad;

/**
 *
 * @author Joni
 */
public class AlojamientoCrear extends javax.swing.JInternalFrame {
     private CiudadData cData;
     private List<Ciudad> cargarCiudad;
     private AlojamientoData aData;
     private List<Alojamiento> cargarListaAlojamientos;
     
    /**
     * Creates new form PaqueteCambios
     */
    public AlojamientoCrear() {
        initComponents();
        refrescarLista();
        refrescarListaAlojamiento();
        jRCamasSimple.setSelected(true);
    }
 private void refrescarLista(){
        jCDestino.removeAllItems();
        cData =new CiudadData();
        cargarCiudad =(List<Ciudad>)cData.listarCiudad();
        for (Ciudad item: cargarCiudad)
            jCDestino.addItem(item);
    }
 private void refrescarListaAlojamiento(){
        jCListarAlojamiento.removeAllItems();
        aData = new AlojamientoData();
        cargarListaAlojamientos = (List<Alojamiento>)aData.listarAlojamiento();
        for (Alojamiento item :cargarListaAlojamientos )
        jCListarAlojamiento.addItem(item);
 
 }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGDesayuno = new javax.swing.ButtonGroup();
        BGCamas = new javax.swing.ButtonGroup();
        ImageIcon icon = new ImageIcon(getClass().getResource("/main/Vistas/Imagenes/AlojamientoPrueba.jpg"));
        Image img=icon.getImage();
        jDesktopPane1 = new javax.swing.JDesktopPane(){

            public void paintComponent(Graphics g)
            {
                g.drawImage(img,0,0,getWidth(),
                    getHeight(),this);
            }
        };
        jCDestino = new javax.swing.JComboBox<>();
        jRDesayuno = new javax.swing.JRadioButton();
        jRCamasSimple = new javax.swing.JRadioButton();
        jRCena = new javax.swing.JRadioButton();
        jRAlmuerzo = new javax.swing.JRadioButton();
        jTImporte = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jREstado = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jCTipo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jBGuardar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBNuevo = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jRCamaDoble = new javax.swing.JRadioButton();
        jRWifi = new javax.swing.JRadioButton();
        jRPileta = new javax.swing.JRadioButton();
        jRAire = new javax.swing.JRadioButton();
        jRBanoPrivado = new javax.swing.JRadioButton();
        jRGimnasio = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRServicioHabitacion = new javax.swing.JRadioButton();
        jRCucheta = new javax.swing.JRadioButton();
        jCListarAlojamiento = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jDEntrada = new com.toedter.calendar.JDateChooser();
        jDSalida = new com.toedter.calendar.JDateChooser();

        jDesktopPane1.setForeground(new java.awt.Color(0, 0, 0));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(681, 547));

        jCDestino.setBackground(new java.awt.Color(209, 237, 251));
        jCDestino.setForeground(new java.awt.Color(0, 0, 0));

        jRDesayuno.setForeground(new java.awt.Color(0, 0, 0));
        jRDesayuno.setText("Desayuno");
        jRDesayuno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRDesayunoActionPerformed(evt);
            }
        });

        BGCamas.add(jRCamasSimple);
        jRCamasSimple.setForeground(new java.awt.Color(0, 0, 0));
        jRCamasSimple.setText("Camas Simple");

        jRCena.setForeground(new java.awt.Color(0, 0, 0));
        jRCena.setText("Cena");

        jRAlmuerzo.setForeground(new java.awt.Color(0, 0, 0));
        jRAlmuerzo.setText("Almuerzo");

        jTImporte.setBackground(new java.awt.Color(209, 237, 251));
        jTImporte.setForeground(new java.awt.Color(0, 0, 0));
        jTImporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTImporteActionPerformed(evt);
            }
        });

        jLabel1.setText("Importe Diario");

        jREstado.setForeground(new java.awt.Color(0, 0, 0));
        jREstado.setText("Estado");

        jLabel2.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Destino");

        jCTipo.setBackground(new java.awt.Color(209, 237, 251));
        jCTipo.setForeground(new java.awt.Color(0, 0, 0));
        jCTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hotel", "Hostel", "Motel", "Cabaña" }));

        jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Tipo de Estadia");

        jBGuardar.setBackground(new java.awt.Color(255, 255, 255));
        jBGuardar.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jBGuardar.setForeground(new java.awt.Color(0, 0, 0));
        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jBEliminar.setBackground(new java.awt.Color(255, 255, 255));
        jBEliminar.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jBEliminar.setForeground(new java.awt.Color(0, 0, 0));
        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBNuevo.setBackground(new java.awt.Color(255, 255, 255));
        jBNuevo.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jBNuevo.setForeground(new java.awt.Color(0, 0, 0));
        jBNuevo.setText("Nuevo");
        jBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoActionPerformed(evt);
            }
        });

        jBSalir.setBackground(new java.awt.Color(255, 255, 255));
        jBSalir.setFont(new java.awt.Font("Sitka Small", 0, 14)); // NOI18N
        jBSalir.setForeground(new java.awt.Color(0, 0, 0));
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        BGCamas.add(jRCamaDoble);
        jRCamaDoble.setForeground(new java.awt.Color(0, 0, 0));
        jRCamaDoble.setText("Camas Doble");

        jRWifi.setForeground(new java.awt.Color(0, 0, 0));
        jRWifi.setText("WiFi");

        jRPileta.setForeground(new java.awt.Color(0, 0, 0));
        jRPileta.setText("Pileta");

        jRAire.setForeground(new java.awt.Color(0, 0, 0));
        jRAire.setText("Aire Acondicionado");

        jRBanoPrivado.setForeground(new java.awt.Color(0, 0, 0));
        jRBanoPrivado.setText("Baño Privado");

        jRGimnasio.setForeground(new java.awt.Color(0, 0, 0));
        jRGimnasio.setText("Gimnasio");

        jLabel4.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Entrada");

        jLabel5.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Salida");

        jRServicioHabitacion.setForeground(new java.awt.Color(0, 0, 0));
        jRServicioHabitacion.setText("Servicio a Habitacion");

        BGCamas.add(jRCucheta);
        jRCucheta.setForeground(new java.awt.Color(0, 0, 0));
        jRCucheta.setText("Cucheta");

        jCListarAlojamiento.setBackground(new java.awt.Color(209, 237, 251));
        jCListarAlojamiento.setForeground(new java.awt.Color(0, 0, 0));
        jCListarAlojamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCListarAlojamientoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Sitka Small", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Listas de Alojamientos");

        jDesktopPane1.setLayer(jCDestino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRDesayuno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRCamasSimple, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRCena, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRAlmuerzo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTImporte, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jREstado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jCTipo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBGuardar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBNuevo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBSalir, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRCamaDoble, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRWifi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRPileta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRAire, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRBanoPrivado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRGimnasio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRServicioHabitacion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jRCucheta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jCListarAlojamiento, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jDEntrada, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jDSalida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jRBanoPrivado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRGimnasio))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jRWifi)
                                .addGap(18, 18, 18)
                                .addComponent(jRPileta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRAire))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jRCamasSimple)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRCamaDoble)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRCucheta))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jRDesayuno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRCena)
                                .addGap(18, 18, 18)
                                .addComponent(jRAlmuerzo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRServicioHabitacion)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBSalir))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCListarAlojamiento, 0, 484, Short.MAX_VALUE)
                                    .addComponent(jCDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(jBNuevo)
                                            .addGap(55, 55, 55)
                                            .addComponent(jBGuardar)
                                            .addGap(45, 45, 45)
                                            .addComponent(jBEliminar))
                                        .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                            .addComponent(jCTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                            .addGap(43, 43, 43)
                                            .addComponent(jREstado)
                                            .addGap(45, 45, 45)
                                            .addComponent(jTImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jDEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                                    .addGap(78, 78, 78)
                                                    .addComponent(jLabel5))
                                                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                                    .addGap(70, 70, 70)
                                                    .addComponent(jDSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2))))
                        .addGap(35, 35, 35))))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCListarAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(14, 14, 14)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRDesayuno)
                    .addComponent(jRCena)
                    .addComponent(jRAlmuerzo)
                    .addComponent(jRServicioHabitacion))
                .addGap(32, 32, 32)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRCamasSimple)
                    .addComponent(jRCamaDoble)
                    .addComponent(jRCucheta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRAire)
                    .addComponent(jRPileta)
                    .addComponent(jRWifi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBanoPrivado)
                    .addComponent(jRGimnasio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jREstado)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBNuevo)
                    .addComponent(jBGuardar)
                    .addComponent(jBEliminar)
                    .addComponent(jBSalir))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRDesayunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRDesayunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRDesayunoActionPerformed

    private void jTImporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTImporteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTImporteActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
    this.dispose();  
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jCListarAlojamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCListarAlojamientoActionPerformed
        if(jCListarAlojamiento==null){
            return;
        }else{
        
            Alojamiento alojamiento = (Alojamiento) jCListarAlojamiento.getSelectedItem();
            //Preparar variables
            try{
                String servicio = alojamiento.getServicio();
                Ciudad ciudad = alojamiento.getCiudad();//Done
                boolean estado = alojamiento.isEstado();//Done
                Date fechaEnt = Date.from(alojamiento.getFechaInicio().atStartOfDay(ZoneId.systemDefault()).toInstant());//Done
                Date fechaSal = Date.from(alojamiento.getFechaFin().atStartOfDay(ZoneId.systemDefault()).toInstant());      //Done  
                double Importe = alojamiento.getImporteDiario();//Done
            
                //setea los parametros
                jTImporte.setText(String.valueOf(Importe));
                jDEntrada.setDate(fechaEnt);
                jDSalida.setDate(fechaSal);
                jREstado.setSelected(estado);
        
                for (Ciudad item : cargarCiudad) {
                    if (item.getIdCiudad() == ciudad.getIdCiudad()) {
                        jCDestino.setSelectedItem(item);
                        break;
                    }
                }
        
                String[] serviciosArray = servicio.split(" \\| ");
                List<String> serviciosList = Arrays.asList(serviciosArray);
                
                boolean selectedAire = false;
                boolean selectedAlmuerzo = false;
                boolean selectedBanoPrivado = false;
                boolean selectedCamaDoble = false;
                boolean selectedCamasSimple = false;
                boolean selectedCena = false;
                boolean selectedCucheta = false;
                boolean selectedGimnasio = false;
                boolean selectedPileta = false;
                boolean selectedServicioHabitacion = false;
                boolean selectedWifi = false;
                boolean selectedDesayuno = false;
                String selectedTipo = "Hotel"; 
            
                for (String service : serviciosList) {
                    if (service.equals("Hostel")) {
                        selectedTipo = "Hostel";
                    } else if (service.equals("Motel")) {
                        selectedTipo = "Motel";
                    } else if (service.equals("Cabaña")) {
                        selectedTipo = "Cabaña";
                    }
                    
                    if (service.equals(jRAire.getText())) {
                        selectedAire = true;
                    }
                    
                    if (service.equals(jRAlmuerzo.getText())) {
                        selectedAlmuerzo = true;
                    }
                    
                    if (service.equals(jRBanoPrivado.getText())) {
                        selectedBanoPrivado = true;
                    }
                 
                     if (service.equals(jRCamaDoble.getText())) {
                        selectedCamaDoble = true;
                    }
                 
                    if (service.equals(jRCamasSimple.getText())) {
                        selectedCamasSimple = true;
                    }
                 
                    if (service.equals(jRCena.getText())) {
                        selectedCena = true;
                    }
                 
                    if (service.equals(jRCucheta.getText())) {
                       selectedCucheta = true;
                    }
                    
                    if (service.equals(jRGimnasio.getText())) {
                       selectedGimnasio = true;
                    }
                   
                    if (service.equals(jRPileta.getText())) {
                      selectedPileta = true;
                    }
                  
                    if (service.equals(jRServicioHabitacion.getText())) {
                      selectedServicioHabitacion = true;
                    }
                   
                    if (service.equals(jRWifi.getText())) {
                       selectedWifi = true;
                    }
                    
                    if (service.equals(jRDesayuno.getText())) {
                       selectedDesayuno = true;
                    }
                }

                jCTipo.setSelectedItem(selectedTipo);
                jRAire.setSelected(selectedAire);
                jRAlmuerzo.setSelected(selectedAlmuerzo);
                jRBanoPrivado.setSelected(selectedBanoPrivado);
                jRCamaDoble.setSelected(selectedCamaDoble);
                jRDesayuno.setSelected(selectedDesayuno);
                jRCamasSimple.setSelected(selectedCamasSimple);
                jRCena.setSelected(selectedCena);
                jRCucheta.setSelected(selectedCucheta);
                jRGimnasio.setSelected(selectedGimnasio);
                jRPileta.setSelected(selectedPileta);
                jRServicioHabitacion.setSelected(selectedServicioHabitacion);
                jRWifi.setSelected(selectedWifi);
            }catch(NullPointerException ex){
                return;    
            }
        }
    }//GEN-LAST:event_jCListarAlojamientoActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        if (jCListarAlojamiento==null) {
            return;
        }
        
            int confirmResult = JOptionPane.showConfirmDialog(
                this, 
                "¿Desea borrar el Alojamiento?",
                "Confirmar Borrado",
                JOptionPane.YES_NO_OPTION
            );
            if (confirmResult == JOptionPane.YES_OPTION) {
                int confirmResult2 = JOptionPane.showConfirmDialog(
                this, 
                "¿Estas seguro que quieres borrar el Alojamiento?",
                "Confirmar Borrado",
                JOptionPane.YES_NO_OPTION
                );
                if (confirmResult2 == JOptionPane.YES_OPTION) {
                    Alojamiento alojamiento = (Alojamiento) jCListarAlojamiento.getSelectedItem();            
                    int idAlojamiento = alojamiento.getIdAlojamiento();
                    AlojamientoData alojamientoData = new AlojamientoData();
                    alojamientoData.borrarAlojamiento(idAlojamiento);
                    refrescarListaAlojamiento();    
                }
            }
      
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoActionPerformed
        
        if(jCDestino==null){
            return;
        }
        
        Ciudad ciudad = (Ciudad) jCDestino.getSelectedItem();
        String tipoTransporte = jCTipo.getSelectedItem().toString();
        if(jDEntrada.getDate()==null || jDSalida.getDate()==null){
            JOptionPane.showMessageDialog(this, "Porfavor ingrese una fecha.");
            return;
        }
        LocalDate fechaEnt = jDEntrada.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaSal = jDSalida.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
       
        
        String tipo = tipoTransporte+ " | ";
        boolean estado = jREstado.isSelected();
        
        try{
            double importe = Double.parseDouble(jTImporte.getText());
        
            String aire = "";
            String almuerzo = "";
            String bano = "";
            String CD = "";
            String CS = "";
            String cena = "";
            String desayuno = ""; 
            String cucheta = "";        
            String gym = "";
            String pileta = "";
            String servicioHab = "";
            String wifi = "";
        
            if(jRAire.isSelected()){
                     aire=jRAire.getText() + " | ";
            }
            if(jRAlmuerzo.isSelected()){
                almuerzo = jRAlmuerzo.getText()+" | ";
            }
            if(jRBanoPrivado.isSelected()){
                bano = jRBanoPrivado.getText()+ " | ";
            }    
            if(jRCamaDoble.isSelected()){
                CD = jRCamaDoble.getText()+ " | ";
            }
            if(jRCamasSimple.isSelected()){
             CS = jRCamasSimple.getText()+ " | ";
            }
            if(jRCena.isSelected()){
                 cena= jRCena.getText()+" | ";
            }
            if(jRDesayuno.isSelected()){
                 desayuno = jRDesayuno.getText()+" | ";
            }    
            if(jRCucheta.isSelected()){
                cucheta = jRCucheta.getText()+" | ";
            }
            if(jRGimnasio.isSelected()){
                gym = jRGimnasio.getText()+" | ";
            }
            if(jRPileta.isSelected()){
                pileta = jRPileta.getText()+ " | ";
            }
            if(jRServicioHabitacion.isSelected()){
                servicioHab = jRServicioHabitacion.getText()+" | ";
            }
            if(jRWifi.isSelected()){
                wifi = jRWifi.getText()+" | ";
            }
            
            String servicio =tipo + desayuno + almuerzo + servicioHab+ cena + CD + CS + cucheta + wifi + pileta + aire + bano + gym;
            
            int comparar = fechaEnt.compareTo(fechaSal);

            if (comparar < 0) {
                if(jRCamaDoble.isSelected()||jRCamasSimple.isSelected() || jRCucheta.isSelected()){
                    servicio = servicio + "El importe total es de : "+(-1*importe * comparar)+ "$";
                    Alojamiento alojamiento = new Alojamiento(fechaEnt,fechaSal,estado,servicio,importe,ciudad);
                    AlojamientoData alojamientoData = new AlojamientoData();
                    alojamientoData.agregarAlojamiento(alojamiento);
                
                    refrescarListaAlojamiento();
                }else{
                    JOptionPane.showMessageDialog(this, "Porfavor elija un estilo de cama. No se puede dormir en el piso!");
                }
            }else{ 
                JOptionPane.showMessageDialog(this, "Entrada fallada, la fecha de salida debe ser posterior a la fecha de entrada");
            }
        }catch(NumberFormatException ex){
                if(jTImporte.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Porfavor ingrese un valor en Importe Diario.");
                }else{
                   JOptionPane.showMessageDialog(this, "Porfavor ingrese un valor de Importe Diario correcto. Solo numeros.");
                }
        }
    }//GEN-LAST:event_jBNuevoActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        if(jCListarAlojamiento==null){
            return;
        }
        Alojamiento alojamiento = (Alojamiento) jCListarAlojamiento.getSelectedItem();
        
        if(jDEntrada.getDate()==null || jDSalida.getDate()==null){
            JOptionPane.showMessageDialog(this, "Porfavor ingrese una fecha.");
            return;
        }
        
        LocalDate fechaEnt = jDEntrada.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaSal = jDSalida.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        boolean Estado = jREstado.isSelected();
        try{
            
        double importe = Double.parseDouble(jTImporte.getText());
        
        Ciudad ciudad = (Ciudad) jCDestino.getSelectedItem();
        String servicio;
        String tipoTransporte = jCTipo.getSelectedItem().toString();
        String tipo = tipoTransporte+ " | ";
            
            //inicializar variables
            String aire = "";
            String almuerzo = "";
            String bano = "";
            String CD = "";
            String CS = "";
            String cena = "";
            String desayuno = ""; 
            String cucheta = "";        
            String gym = "";
            String pileta = "";
            String servicioHab = "";
            String wifi = "";
        
            if(jRAire.isSelected()){
                aire=jRAire.getText() + " | ";
            }
            if(jRAlmuerzo.isSelected()){
                almuerzo = jRAlmuerzo.getText()+" | ";
            }
            if(jRBanoPrivado.isSelected()){
                bano = jRBanoPrivado.getText()+ " | ";
            }    
            if(jRCamaDoble.isSelected()){
                CD = jRCamaDoble.getText()+ " | ";
            }
            if(jRCamasSimple.isSelected()){
                CS = jRCamasSimple.getText()+ " | ";
            }
            if(jRCena.isSelected()){
                cena= jRCena.getText()+" | ";
            }
            if(jRDesayuno.isSelected()){
                desayuno = jRDesayuno.getText()+" | ";
            }    
            if(jRCucheta.isSelected()){
                cucheta = jRCucheta.getText()+" | ";
            }
            if(jRGimnasio.isSelected()){
                gym = jRGimnasio.getText()+" | ";
            }
            if(jRPileta.isSelected()){
                pileta = jRPileta.getText()+ " | ";
            }
            if(jRServicioHabitacion.isSelected()){
                servicioHab = jRServicioHabitacion.getText()+" | ";
            }
            if(jRWifi.isSelected()){
                wifi = jRWifi.getText()+" | ";
            }
            
            servicio =tipo + desayuno + almuerzo + servicioHab+ cena + CD + CS + cucheta + wifi + pileta + aire + bano + gym;
            
            int comparar = fechaEnt.compareTo(fechaSal);
            if (comparar < 0) {
                //actualiza alojamiento
                alojamiento.setCiudad(ciudad);
                alojamiento.setImporteDiario(importe);
                alojamiento.setEstado(Estado);
                alojamiento.setFechaFin(fechaSal);
                alojamiento.setFechaInicio(fechaEnt);
                alojamiento.setServicio(servicio);
                AlojamientoData alojamientoData = new AlojamientoData();
                    alojamientoData.modificarAlojamiento(alojamiento);
            } else {
                JOptionPane.showMessageDialog(this, "Entrada fallada, la fecha de salida debe ser posterior a la fecha de entrada");
            }
        ;
        }catch(NumberFormatException ex){
            if(jTImporte.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Porfavor ingrese un valor en Importe Diario.");
            }else{
                JOptionPane.showMessageDialog(this, "Porfavor ingrese un valor de Importe Diario correcto. Solo numeros.");
            }
        }
        
    }//GEN-LAST:event_jBGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BGCamas;
    private javax.swing.ButtonGroup BGDesayuno;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBNuevo;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Ciudad> jCDestino;
    private javax.swing.JComboBox<Alojamiento> jCListarAlojamiento;
    private javax.swing.JComboBox<String> jCTipo;
    private com.toedter.calendar.JDateChooser jDEntrada;
    private com.toedter.calendar.JDateChooser jDSalida;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRAire;
    private javax.swing.JRadioButton jRAlmuerzo;
    private javax.swing.JRadioButton jRBanoPrivado;
    private javax.swing.JRadioButton jRCamaDoble;
    private javax.swing.JRadioButton jRCamasSimple;
    private javax.swing.JRadioButton jRCena;
    private javax.swing.JRadioButton jRCucheta;
    private javax.swing.JRadioButton jRDesayuno;
    private javax.swing.JRadioButton jREstado;
    private javax.swing.JRadioButton jRGimnasio;
    private javax.swing.JRadioButton jRPileta;
    private javax.swing.JRadioButton jRServicioHabitacion;
    private javax.swing.JRadioButton jRWifi;
    private javax.swing.JTextField jTImporte;
    // End of variables declaration//GEN-END:variables
}
